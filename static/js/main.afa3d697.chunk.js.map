{"version":3,"sources":["components/Input.jsx","components/Checkbox.jsx","components/MultiSelect.jsx","components/Header.jsx","utils/constants.js","components/Product.jsx","components/ProductList.jsx","App.js","serviceWorker.js","index.js"],"names":["Input","onChange","placeholder","StyledInput","event","target","value","styled","input","Checkbox","name","isChecked","StyledCheckbox","className","type","checked","e","div","MultiSelect","title","choices","useState","isHidden","setIsHidden","StyledMultiSelect","onClick","StyledOptions","map","c","i","key","Header","AppContext","Consumer","filterByName","fStyles","filterByFurnitureStyles","deliveryTimes","filterByDeliveryTimes","StyledHeader","text","StyledFilter","style","time","DELIVERY_TIMES","number","Product","desc","delTime","price","StyledProduct","length","substring","s","ProductList","showedFurnitures","StyledProductList","product","description","furniture_style","delivery_time","createContext","App","furnitures","setFurnitures","setFStyles","setDeliveryTimes","setShowedFurnitures","getFurnitures","a","fetch","data","json","furniture_styles","products","useEffect","deactivateStyleFilter","deactivateDeliveryTimeFilter","t","Provider","filter","toLowerCase","includes","newFStyle","checkedStyles","newShowedFurnitures","forEach","f","Array","from","Set","find","newDTimes","checkedDTimes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.afa3d697.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Input = ({onChange, placeholder}) => {\n    return (\n        <StyledInput \n            placeholder={placeholder}\n            onChange={(event) => onChange(event.target.value)}\n        />\n    )\n}\n\nexport default Input;\n\nconst StyledInput = styled.input`\n    background: #4556D0;\n    font-size: 16px;\n    font-weight: bold;\n    border: none;\n    outline: none;\n    border-bottom: 1px solid #7C80C4;\n    color: white;\n    ::-webkit-input-placeholder { /* Edge */\n        color: white;\n        font-weight: bold;\n    }\n\n    :-ms-input-placeholder { /* Internet Explorer */\n        color: white;\n        font-weight: bold;\n    }\n\n    ::placeholder {\n        color: white;\n        font-weight: bold;\n    }\n`;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Checkbox = ({name, isChecked, onChange}) => {\n    return (\n        <StyledCheckbox>\n            <div>{name}</div>\n            <label className=\"checkbox-label\">\n                <input \n                    type=\"checkbox\" \n                    name={name} \n                    checked={isChecked} \n                    onChange={(e) => onChange({\n                        name: e.target.name,\n                        isChecked: e.target.checked\n                    })}\n                />\n                <span className=\"checkbox-custom rectangular\"></span>\n            </label>\n            \n        </StyledCheckbox>\n    )\n}\n\nexport default Checkbox;\n\nconst StyledCheckbox = styled.div`\n    position: relative;\n    background: white;\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n    font-size: 14px;\n    .checkbox-label {\n        display: block;\n        position: relative;\n        cursor: pointer;\n        font-size: 14px;\n        line-height: 14px;\n        height: 14px;\n        width: 14px;\n        clear: both;\n    }\n\n    .checkbox-label input {\n        position: absolute;\n        opacity: 0;\n        cursor: pointer;\n    }\n\n    .checkbox-label .checkbox-custom {\n        position: absolute;\n        top: 0px;\n        left: 0px;\n        height: 14px;\n        width: 14px;\n        background-color: transparent;\n        border-radius: 5px;\n        transition: all 0.3s ease-out;\n        -webkit-transition: all 0.3s ease-out;\n        -moz-transition: all 0.3s ease-out;\n        -ms-transition: all 0.3s ease-out;\n        -o-transition: all 0.3s ease-out;\n        border: 1px solid black;\n    }\n\n\n    .checkbox-label input:checked ~ .checkbox-custom {\n        background-color: #009D8B;\n        border-radius: 5px;\n        -webkit-transform: rotate(0deg) scale(1);\n        -ms-transform: rotate(0deg) scale(1);\n        transform: rotate(0deg) scale(1);\n        opacity:1;\n        border: 1px solid #009D8B;\n    }\n\n\n    .checkbox-label .checkbox-custom::after {\n        position: absolute;\n        content: \"\";\n        left: 14px;\n        top: 14px;\n        height: 0px;\n        width: 0px;\n        border-radius: 5px;\n        border: solid #009BFF;\n        border-width: 0 3px 3px 0;\n        -webkit-transform: rotate(0deg) scale(0);\n        -ms-transform: rotate(0deg) scale(0);\n        transform: rotate(0deg) scale(0);\n        opacity:1;\n        transition: all 0.3s ease-out;\n        -webkit-transition: all 0.3s ease-out;\n        -moz-transition: all 0.3s ease-out;\n        -ms-transition: all 0.3s ease-out;\n        -o-transition: all 0.3s ease-out;\n    }\n\n\n    .checkbox-label input:checked ~ .checkbox-custom::after {\n    -webkit-transform: rotate(45deg) scale(1);\n    -ms-transform: rotate(45deg) scale(1);\n    transform: rotate(45deg) scale(1);\n    opacity:1;\n    left: 5px;\n    top: 2px;\n    width: 3px;\n    height: 7px;\n    border: solid white;\n    border-width: 0 2px 2px 0;\n    background-color: transparent;\n    border-radius: 0;\n    }\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Checkbox from './Checkbox';\n\nconst MultiSelect = ({title, choices, onChange}) => {\n    const [isHidden, setIsHidden] = useState(true);\n    return (\n        <StyledMultiSelect>\n            <button \n            onClick={()=> setIsHidden(!isHidden)}\n            className={!isHidden ? \"active\" : \"\"}>\n                {isHidden && <span className=\"arrow\"></span>}\n                {title}\n            </button>\n            {!isHidden &&\n                <StyledOptions>\n                    {choices.map( (c, i) => (\n                        <Checkbox\n                            key={i}\n                            name={c.name}\n                            isChecked={c.isChecked}\n                            onChange={(e)=>onChange(e)}\n                        />\n                    ))}\n                </StyledOptions>\n            }\n        </StyledMultiSelect>\n    )\n}\n\nexport default MultiSelect;\n\nconst StyledMultiSelect = styled.div`\n    position: relative;\n    button {\n        width: 100%;\n        padding: 10px;\n        padding-left: 10px;\n        text-align: start;\n        position: relative;\n        background: white;\n        outline: none;\n        border: none;\n        .arrow {\n            display: block;\n            position: absolute;\n            right: 10px;\n            top: 15px;\n            width: 0;\n            height: 0;\n            border-left: 5px solid transparent;\n            border-right: 5px solid transparent;\n            border-top: 5px solid black;\n        }\n        &.active {\n            color: #AAA9A9;\n        }\n    }\n`;\n\nconst StyledOptions = styled.div`\n    position: absolute;\n    width: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    max-height: 172px;\n    overflow-y: scroll;\n    border: 1px solid #e3e3e3;\n    background: white;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Input from './Input';\nimport { AppContext } from '../App';\nimport MultiSelect from './MultiSelect';\n\nconst Header = () => {\n    return (\n        <AppContext.Consumer>\n            { ({filterByName, fStyles, filterByFurnitureStyles, \n                deliveryTimes, filterByDeliveryTimes}) => (\n                <StyledHeader>\n                    <Input\n                        onChange={(text) => filterByName(text)} \n                        placeholder=\"Search Furniture\"\n                    />\n                    <StyledFilter>\n                        <MultiSelect \n                            title=\"Furniture Styles\"\n                            choices={fStyles}\n                            onChange={(style) => filterByFurnitureStyles(style)}\n                        />\n                        <MultiSelect \n                            title=\"Delivery Time\"\n                            choices={deliveryTimes}\n                            onChange={(time) => filterByDeliveryTimes(time)}\n                        />\n                    </StyledFilter>\n                    \n                </StyledHeader>\n            )}\n        </AppContext.Consumer>\n    )\n}\n\nexport default Header;\n\nconst StyledHeader = styled.div`\n    position: relative;\n    background: #4556D0;\n    padding: 20px;\n`;\n\nconst StyledFilter = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 30px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n`;\n\n","export const URL_API = \"http://www.mocky.io/v2/5c9105cb330000112b649af8\"\nexport const DELIVERY_TIMES = [\n    {\n        name: \"1 weeks\",\n        number: 7,\n        isChecked: false\n    },\n    {\n        name: \"2 weeks\",\n        number: 14,\n        isChecked: false\n\n    },\n    {\n        name: \"1 month\",\n        number: 30,\n        isChecked: false\n    },\n    {\n        name: \"more\",\n        number: 60,\n        isChecked: false\n    }\n]","import React from 'react';\nimport styled from 'styled-components';\n\nconst Product = ({name, desc, style, delTime, price}) => {\n    return (\n        <StyledProduct>\n            <div className=\"flex sb\">\n                <p className=\"bold f-16 black\">{name}</p>\n                <p className=\"bold f-12 orange\">{price} (IDR)</p>\n            </div>\n            <p className=\"f-12 black\">{desc.length>114? desc.substring(0,111)+\"...\" : desc}</p>\n            <p className=\"f-12 blue\">{style.map((s,i)=>{return i === style.length-1? s : s + \", \" })}</p>\n            <p className=\"bold underlined f-14 blue flex end\">{delTime} Day</p>\n            \n        </StyledProduct>\n    )\n}\n\nexport default Product;\n\nconst StyledProduct = styled.div`\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    .flex {\n        display: flex;\n        align-items: center;\n        &.sb {\n            justify-content: space-between;\n        }\n        &.end {\n            justify-content: flex-end;\n        }\n    }\n`;","import React from 'react';\nimport { AppContext } from '../App';\nimport Product from './Product';\nimport styled from 'styled-components';\n\nconst ProductList = () => {\n    return (\n        <AppContext.Consumer>\n            { ({showedFurnitures}) => (\n                <StyledProductList>\n                    {showedFurnitures.map((product, i) => {\n                    return (<Product\n                        key={i} \n                        name={product.name}\n                        desc={product.description}\n                        style={product.furniture_style}\n                        delTime={product.delivery_time}\n                        price={product.price}\n                     />)\n                })}\n                </StyledProductList>\n            )}\n        </AppContext.Consumer>\n    )\n}\n\nexport default ProductList;\n\nconst StyledProductList = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 20px;\n    grid-row-gap: 20px;\n    padding: 20px;\n`;","import React, { useState, createContext, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport { URL_API, DELIVERY_TIMES } from './utils/constants';\nimport ProductList from './components/ProductList';\n\nexport const AppContext = createContext();\n\nconst App = () => {\n\tconst [furnitures, setFurnitures] = useState([]);\n\tconst [fStyles, setFStyles] = useState([]);\n\tconst [deliveryTimes, setDeliveryTimes] = useState(DELIVERY_TIMES);\n\tconst [showedFurnitures, setShowedFurnitures] = useState([]);\n\n\t\n\tconst getFurnitures = async () => {\n\t\tlet data = await fetch(URL_API);\n\t\tdata = await data.json();\n\t\tsetFStyles(data.furniture_styles.map(s => {return {\"name\": s, \"isChecked\": false}}));\n\t\tsetFurnitures(data.products);\n\t\tsetShowedFurnitures(data.products);\n\t}\n\n\n\n\tuseEffect(()=>{\n\t\tgetFurnitures();\t\n\t},[])\n\n\tconst filterByName = (text) => {\n\t\tsetShowedFurnitures(\n\t\t\tfurnitures.filter(i => i.name.toLowerCase().includes(text.toLowerCase()))\n\t\t);\n\t\tdeactivateDeliveryTimeFilter();\n\t\tdeactivateStyleFilter();\n\t}\n\n\tconst filterByFurnitureStyles = (style) => {\n\t\tdeactivateDeliveryTimeFilter();\n\t\tconst newFStyle = fStyles.map( s => {\n\t\t\tif (style.name === s.name) {\n\t\t\t\treturn { ...s, isChecked: !s.isChecked };\n\t\t\t}else {\n\t\t\t\treturn { ...s };\n\t\t\t}\n\t\t})\n\t\tsetFStyles(newFStyle);\n\n\t\tconst checkedStyles = newFStyle.filter(s => s.isChecked);\n\t\t\n\t\tlet newShowedFurnitures = []\n\n\t\tif (checkedStyles.length === 0) {\n\t\t\tnewShowedFurnitures = [...furnitures]\n\t\t} else {\n\t\t\tcheckedStyles.forEach(\n\t\t\t\ts =>  {\n\t\t\t\t\tnewShowedFurnitures = [\n\t\t\t\t\t\t...newShowedFurnitures,\n\t\t\t\t\t\t...furnitures.filter(f => f.furniture_style.includes(s.name))\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t)\n\t\n\t\t\tnewShowedFurnitures = Array.from(new Set(newShowedFurnitures.map(i=>i.name)))\n\t\t\t\t.map(i => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...furnitures.find(f => f.name === i)\n\t\t\t\t\t}\n\t\t\t\t})\t\n\t\t}\n\n\t\tsetShowedFurnitures(newShowedFurnitures);\n\n\t}\n\n\tconst filterByDeliveryTimes = (time) => {\n\t\tdeactivateStyleFilter()\n\t\tconst newDTimes = deliveryTimes.map( t => {\n\t\t\tif (time.name === t.name) {\n\t\t\t\treturn { ...t, isChecked: !t.isChecked };\n\t\t\t}else {\n\t\t\t\treturn { ...t };\n\t\t\t}\n\t\t})\n\t\tsetDeliveryTimes(newDTimes);\n\n\t\tconst checkedDTimes = newDTimes.filter(t => t.isChecked);\n\t\t\n\t\tlet newShowedFurnitures = []\n\n\t\tif (checkedDTimes.length === 0) {\n\t\t\tnewShowedFurnitures = [...furnitures]\n\t\t} else {\n\t\t\tcheckedDTimes.forEach(\n\t\t\t\tt =>  {\n\t\t\t\t\tnewShowedFurnitures = [\n\t\t\t\t\t\t...newShowedFurnitures,\n\t\t\t\t\t\t...furnitures.filter(f => f.delivery_time <= t.number)\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t)\n\t\n\t\t\tnewShowedFurnitures = Array.from(new Set(newShowedFurnitures.map(i=>i.name)))\n\t\t\t\t.map(i => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...furnitures.find(f => f.name === i)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\t\t\n\t\tsetShowedFurnitures(newShowedFurnitures);\n\t}\n\n\tconst deactivateStyleFilter = () => {\n\t\tsetFStyles(fStyles.map(s => {\n\t\t\treturn {\n\t\t\t\t...s,\n\t\t\t\tisChecked: false\n\t\t\t}\n\t\t}))\n\t}\n\n\tconst deactivateDeliveryTimeFilter = () => {\n\t\tsetDeliveryTimes(deliveryTimes.map(t => {\n\t\t\treturn {\n\t\t\t\t...t,\n\t\t\t\tisChecked: false\n\t\t\t}\n\t\t}))\n\t}\n\n\t\n\n\treturn (\n\t\t<AppContext.Provider value={{\n\t\t\tshowedFurnitures: showedFurnitures,\n\t\t\tfStyles: fStyles,\n\t\t\tdeliveryTimes: deliveryTimes,\n\t\t\tfilterByName: filterByName,\n\t\t\tfilterByFurnitureStyles: filterByFurnitureStyles,\n\t\t\tfilterByDeliveryTimes: filterByDeliveryTimes\n\t\t}}>\n\t\t\t<Header />\n\t\t\t<ProductList/>\n\t\t</AppContext.Provider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}